version: '3.9'

services:
  db:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    networks:
      default:
        ipv4_address: 172.25.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: ${DOCKER_USERNAME}/frontend:${TAG}
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      default:
        ipv4_address: 172.25.0.4

  backend:
    image: ${DOCKER_USERNAME}/backend:${TAG}
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      default:
        ipv4_address: 172.25.0.3

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      default:
        ipv4_address: 172.25.0.5

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
